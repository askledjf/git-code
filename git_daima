
75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo
$ git status
fatal: not a git repository (or any of the parent directories): .git

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo
$ git init
Initialized empty Git repository in D:/coderlife/demo/.git/

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hit.txt.txt

nothing added to commit but untracked files present (use "git add" to track)

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git add hit.txt
fatal: pathspec 'hit.txt' did not match any files

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git add hit.txt

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   hit.txt


75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git commit -m "text commit"
[master (root-commit) 2a62416] text commit
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 hit.txt

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git status
On branch master
nothing to commit, working tree clean

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git log
commit 2a62416f0c2310999c50b0f8a009cca74094b1d9 (HEAD -> master)
Author: Hu <hhdong61@163.com>
Date:   Mon Apr 11 20:58:57 2022 +0800

    text commit

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git branch
* master

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git branch a

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git branch
  a
* master

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git checkout

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git checkout a
Switched to branch 'a'

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (a)
$ git branch
* a
  master

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (a)
$ git checkout -b b
Switched to a new branch 'b'

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (b)
$ git merge
fatal: No remote for the current branch.

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (b)
$ git merge a
Already up to date.

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (b)
$ git checkout master
Switched to branch 'master'

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git merge a
Already up to date.

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git branch -d a
Deleted branch a (was 2a62416).

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git banch
git: 'banch' is not a git command. See 'git --help'.

The most similar command is
        branch

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git branch
  b
* master

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git branch -D##强制删除
error: unknown switch `#'
usage: git branch [<options>] [-r | -a] [--merged] [--no-merged]
   or: git branch [<options>] [-l] [-f] <branch-name> [<start-point>]
   or: git branch [<options>] [-r] (-d | -D) <branch-name>...
   or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch>
   or: git branch [<options>] (-c | -C) [<old-branch>] <new-branch>
   or: git branch [<options>] [-r | -a] [--points-at]
   or: git branch [<options>] [-r | -a] [--format]

Generic options
    -v, --verbose         show hash and subject, give twice for upstream branch
    -q, --quiet           suppress informational messages
    -t, --track[=(direct|inherit)]
                          set branch tracking configuration
    -u, --set-upstream-to <upstream>
                          change the upstream info
    --unset-upstream      unset the upstream info
    --color[=<when>]      use colored output
    -r, --remotes         act on remote-tracking branches
    --contains <commit>   print only branches that contain the commit
    --no-contains <commit>
                          print only branches that don't contain the commit
    --abbrev[=<n>]        use <n> digits to display object names

Specific git-branch actions:
    -a, --all             list both remote-tracking and local branches
    -d, --delete          delete fully merged branch
    -D                    delete branch (even if not merged)
    -m, --move            move/rename a branch and its reflog
    -M                    move/rename a branch, even if target exists
    -c, --copy            copy a branch and its reflog
    -C                    copy a branch, even if target exists
    -l, --list            list branch names
    --show-current        show current branch name
    --create-reflog       create the branch's reflog
    --edit-description    edit the description for the branch
    -f, --force           force creation, move/rename, deletion
    --merged <commit>     print only branches that are merged
    --no-merged <commit>  print only branches that are not merged
    --column[=<style>]    list branches in columns
    --sort <key>          field name to sort on
    --points-at <object>  print only branches of the object
    -i, --ignore-case     sorting and filtering are case insensitive
    --format <format>     format to use for the output


75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git tag v1.0

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git tag
v1.0

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git checkout v1.0
Note: switching to 'v1.0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 2a62416 text commit

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo ((v1.0))
$ ssh
usage: ssh [-46AaCfGgKkMNnqsTtVvXxYy] [-B bind_interface]
           [-b bind_address] [-c cipher_spec] [-D [bind_address:]port]
           [-E log_file] [-e escape_char] [-F configfile] [-I pkcs11]
           [-i identity_file] [-J [user@]host[:port]] [-L address]
           [-l login_name] [-m mac_spec] [-O ctl_cmd] [-o option] [-p port]
           [-Q query_option] [-R address] [-S ctl_path] [-W host:port]
           [-w local_tun[:remote_tun]] destination [command [argument ...]]

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo ((v1.0))
$ ssh-keygen -t rsa


Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/75247/.ssh/id_rsa): Created directory '/c/Users/75247/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/75247/.ssh/id_rsa
Your public key has been saved in /c/Users/75247/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:f9TQAnUnHqwbcGVeqyrqcyN2Al7l82JjYtBZ93WLj2U 75247@LAPTOP-3QFK1R4M
The key's randomart image is:
+---[RSA 3072]----+
|          ...o* o|
|          ...*.=.|
|           oo.+. |
|         o .o+...|
|      . S . o++ o|
|     o + + .oo E |
|    . +  .+.. =  |
|     . B.O.o . . |
|      +oX +      |
+----[SHA256]-----+

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo ((v1.0))
$ git checkout master
Switched to branch 'master'

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ ssh
usage: ssh [-46AaCfGgKkMNnqsTtVvXxYy] [-B bind_interface]
           [-b bind_address] [-c cipher_spec] [-D [bind_address:]port]
           [-E log_file] [-e escape_char] [-F configfile] [-I pkcs11]
           [-i identity_file] [-J [user@]host[:port]] [-L address]
           [-l login_name] [-m mac_spec] [-O ctl_cmd] [-o option] [-p port]
           [-Q query_option] [-R address] [-S ctl_path] [-W host:port]
           [-w local_tun[:remote_tun]] destination [command [argument ...]]

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/75247/.ssh/id_rsa):
/c/Users/75247/.ssh/id_rsa already exists.
Overwrite (y/n)?

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ ssh -T git@github.com
The authenticity of host 'github.com (20.205.243.166)' can't be established.
ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? y
Please type 'yes', 'no' or the fingerprint: yes
Warning: Permanently added 'github.com' (ED25519) to the list of known hosts.
Hi askledjf! You've successfully authenticated, but GitHub does not provide shell access.

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ ssh -T git@github.com
Hi askledjf! You've successfully authenticated, but GitHub does not provide shell access.

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$ git push origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

75247@LAPTOP-3QFK1R4M MINGW64 /d/coderlife/demo (master)
$
